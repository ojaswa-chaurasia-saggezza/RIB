{"version":3,"sources":["Elements/Tables.js","Services/Auth.service.js","Services/Auth-header.js","Services/Otp-header.js","Services/Customer.service.js","Components/CASA.js","Containers/Dashboard/Dashboard.js","Containers/Login Signup/Login.js","Elements/FormDialog.js","Containers/Login Signup/SignUp.js","Containers/Login Signup/ResetPassword.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Tables","props","state","data","formatter","Intl","NumberFormat","style","currency","this","setState","DATA","map","val","push","transactionId","date","split","join","narration","category","format","withdraw","deposit","closingBalance","console","log","$","table","accountNumber","DataTable","lengthMenu","stateSave","dom","responsive","columns","title","filterGlobal","i","search","draw","column","Number","on","id","padding","className","margin","zIndex","aria-label","value","defaultValue","type","placeholder","width","React","Component","API_URL","username","password","axios","post","then","response","accessToken","localStorage","setItem","JSON","stringify","removeItem","parse","getItem","authHeader","customer","Authorization","otpHeader","signUpCredentials","API_URL_OTP","get","headers","otpNumber","useStyles","makeStyles","theme","root","minWidth","marginBottom","spacing","bullet","display","transform","fontSize","pos","paper","textAlign","boxShadow","maxHeight","border","borderBottom","CASA","classes","useState","account","setAccount","setCustomer","setErrorMessage","Accounts","setAccounts","selectedAccount","setSelectedAccount","listOfTransactions","setListOfTransactions","useEffect","AuthService","CustomerService","accountList","accounts","error","_content","message","toString","CssBaseline","Card","variant","CardHeader","CardContent","Grid","container","item","xs","Paper","FormControl","Select","labelId","displayEmpty","onChange","event","target","label","MenuItem","onClick","transactions","handleAccountChange","Typography","gutterBottom","balance","segment","length","flexGrow","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","AccordionStyle","withStyles","color","Accordion","Dashboard","Customer","ErrorMessage","tzString","window","useTheme","mobileOpen","setMobileOpen","anchorEl","setAnchorEl","open","Boolean","handleDrawerToggle","handleClose","Divider","List","text","index","ListItem","button","component","Link","to","ListItemText","primary","AccordionSummary","expandIcon","aria-controls","AccordionDetails","undefined","document","body","AppBar","position","Toolbar","IconButton","edge","noWrap","Button","disableElevation","currentTarget","name","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","TransitionComponent","Fade","ListItemIcon","previousLogin","Date","toLocaleString","timeZone","history","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","smDown","path","marginTop","flexDirection","alignItems","avatar","backgroundColor","palette","dark","form","submit","Alert","elevation","Login","setOpen","whereTo","user_name","changeusername","errorText","usernameError","setUsernameError","pass_word","changepassword","passwordError","setPasswordError","useHistory","loading","setLoading","setMessage","handleLogin","e","preventDefault","setTimeout","resMessage","Container","maxWidth","Avatar","TextField","InputLabelProps","required","fullWidth","autoComplete","autoFocus","onKeyPress","helperText","Snackbar","autoHideDuration","severity","disabled","Box","mt","FormDialog","Dialog","aria-labelledby","DialogTitle","DialogContent","setOtp","DialogActions","verify","secondary","main","wrapper","buttonProgress","green","top","left","SignUp","dialogVariable","openSnack","setOpenSnack","Otp","setUsername","setPassword","otpError","setOtpError","handleSnackClose","reason","handleClickOpen","noValidate","CircularProgress","size","justify","ResetPassword","confirmPassword","setConfirmPassword","confirmPasswordError","setConfirmPasswordError","clear","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6abdf20a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n//Bootstrap and jQuery libraries\r\nimport 'jquery/dist/jquery.min.js';\r\n\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\"\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\"\r\nimport $, { data } from 'jquery';\r\n\r\n\r\nclass Tables extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: [] };\r\n\r\n    }\r\n    componentDidMount() {\r\n        //initialize datatable\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'INR',\r\n\r\n        });\r\n        this.setState({ data: this.props.data });\r\n\r\n        var DATA = this.props.data.map((val) => {\r\n            var data = [];\r\n            data.push(val.transactionId);\r\n            data.push(\"Date : \" + val.date.split(\"T\").join(\" Time : \").split('.')[0]);\r\n            data.push(val.narration);\r\n            data.push(val.category);\r\n            data.push(formatter.format(val.withdraw));\r\n            data.push(formatter.format(val.deposit));\r\n            data.push(formatter.format(val.closingBalance));\r\n            return data;\r\n        });\r\n\r\n        console.log(DATA);\r\n\r\n        $(() => {\r\n            var table = $('#Credit_Card_and_CASA_Table' + this.props.accountNumber).DataTable({\r\n                lengthMenu: [5, 10, 15, 25, 30],\r\n                stateSave: false,\r\n                dom: \"ltip\",\r\n                responsive: true,\r\n                data: DATA,\r\n                columns: [\r\n                    { title: \"Transaction ID\" },\r\n                    { title: \"Date\" },\r\n                    { title: \"Narration\" },\r\n                    { title: \"Category.\" },\r\n                    { title: \"Withdrawal\" },\r\n                    { title: \"Deposit\" },\r\n                    { title: \"Balance\" }\r\n                ]\r\n\r\n            });\r\n            function filterGlobal() {\r\n                if ($(\"#filter_global select\").val() == \"-1\")\r\n                    table.search(\r\n                        $('#global_filter').val(),\r\n                        false,  //This is for Regex search\r\n                        true,   // This is for smart search\r\n                    ).draw();\r\n                else\r\n                    filterColumn($(\"#filter_global select\").val());\r\n\r\n\r\n            }\r\n            function filterColumn(i) {\r\n                table.column(Number(i)).search(\r\n                    $('#global_filter').val(),\r\n                    false,  //This is for Regex search\r\n                    true,   // This is for smart search\r\n                ).draw();\r\n            }\r\n            $('input.global_filter').on('keyup click', function () {\r\n                filterGlobal();\r\n            });\r\n\r\n\r\n        });\r\n    }\r\n    render() {\r\n        //Datatable HTML\r\n        return (\r\n            <div id={\"table_div\"} style={{ padding: ' 10px' }}>\r\n                {/* <!-- Table to be used for searching --> */}\r\n                <div>\r\n                    <table className=\"summary_text\" style={{ margin: '0 1em -1em auto', zIndex: 200, }}>\r\n                        <tbody>\r\n                            <tr id=\"filter_global\">\r\n                                <td >Search: </td>\r\n                                <td >\r\n                                    <div className=\"input-group input-group-sm ms-2\">\r\n                                        <select className=\"form-select col-5\" aria-label=\"Default select example\">\r\n                                            <option value=\"-1\" defaultValue>Global Search</option>\r\n                                            <option value=\"0\">Transaction ID</option>\r\n                                            <option value=\"1\">Date</option>\r\n                                            <option value=\"2\">Narration</option>\r\n                                            <option value=\"3\">Category</option>\r\n                                            <option value=\"4\">Withdrawal</option>\r\n                                            <option value=\"5\">Deposit</option>\r\n                                        </select>\r\n                                        <input type=\"search\" placeholder=\"Search here\" className=\"form-control ds-input global_filter\" id=\"global_filter\" />\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {/* </div>The Main Table to Be displayed */}\r\n                <table id={\"Credit_Card_and_CASA_Table\" + this.props.accountNumber} className=\"table table-striped table-responsive table-bordered \" style={{ width: '100%' }}>\r\n                    {/* <thead>\r\n                        <tr>\r\n                            <th>Transaction ID</th>\r\n                            <th>Date</th>\r\n                            <th>Narration</th>\r\n                            <th>Category</th>\r\n                            <th>Withdrawal</th>\r\n                            <th>Deposit</th>\r\n                            <th>Balance</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {/* <tbody>\r\n\r\n                        {this.props.data.map((val, index) => {\r\n\r\n                            console.log(\"dsafdsa\");\r\n                            return (<tr key={val.transactionId}>\r\n                            <td>{val.transactionId}</td>\r\n                            <td>{val.date}</td>\r\n                            <td>{val.narration}</td>\r\n                            <td>{val.category}</td>\r\n                            <td>{val.withdraw}</td>\r\n                            <td>{val.deposit}</td>\r\n                            <td>{val.closingBalance}</td>\r\n                        </tr>)\r\n                        }\r\n\r\n                        )}\r\n\r\n                    </tbody> } */}\r\n\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Tables;","import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/auth/\";\r\n\r\nconst signUp = (username, password) => {\r\n    return axios.post(API_URL + \"signUp\", {\r\n        username,\r\n        password\r\n    });\r\n};\r\n\r\nconst login = (username, password) => {\r\n    return axios\r\n        .post(API_URL + \"login\", {\r\n            username,\r\n            password,\r\n        })\r\n        .then((response) => {\r\n            if (response.data.accessToken) {\r\n                localStorage.setItem(\"customer\", JSON.stringify(response.data));\r\n            }\r\n\r\n            return response.data;\r\n        });\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"customer\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem(\"customer\"));\r\n};\r\n\r\nexport default {\r\n    signUp,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n};","export default function authHeader() {\r\n    const customer = JSON.parse(localStorage.getItem('customer'));\r\n  \r\n    if (customer && customer.accessToken) {\r\n      return { Authorization: 'Bearer ' + customer.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }","export default function otpHeader() {\r\n    const signUpCredentials = JSON.parse(localStorage.getItem('SignUpToken'));\r\n\r\n    if (signUpCredentials && signUpCredentials.accessToken) {\r\n        console.log(signUpCredentials.accessToken);\r\n        return { Authorization: 'Bearer ' + signUpCredentials.accessToken };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import axios from \"axios\";\r\nimport authHeader from \"./Auth-header\";\r\nimport otpHeader from \"./Otp-header\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/v1/\";\r\nconst API_URL_OTP = \"http://localhost:8080/\";\r\n\r\n\r\nconst getPublicContent = () => {\r\n  return axios.get(API_URL + \"all\");\r\n};\r\n\r\nconst generateOTP = () => {\r\n  return axios.get(API_URL_OTP + 'generateOtp', { headers: otpHeader() });\r\n}\r\n\r\nconst validateOTP = (otpNumber) => {\r\n  return axios.get(API_URL_OTP + 'validateOtp/' + otpNumber, { headers: otpHeader() });\r\n}\r\n\r\nconst resetPassword = (username, password) => {\r\n  return axios.post(API_URL + 'resetPassword',{ username, password}, { headers: otpHeader() });\r\n}\r\n\r\n\r\nconst getCustomerDetails = () => {\r\n  return axios.get(API_URL + \"CustomerDetails\", { headers: authHeader() });\r\n};\r\n\r\nconst getAccountDetails = (accountNumber) => {\r\n  return axios.get(API_URL + \"Account/\" + accountNumber, { headers: authHeader() });\r\n}\r\n\r\n\r\nconst getAdminBoard = () => {\r\n  return axios.get(API_URL + \"admin\", { headers: authHeader() });\r\n};\r\n\r\nexport default {\r\n  getPublicContent,\r\n  getCustomerDetails,\r\n  getAccountDetails,\r\n  generateOTP,\r\n  validateOTP,\r\n  resetPassword,\r\n  getAdminBoard,\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { FormHelperText, Paper } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { CssBaseline, Grid, FormControl, Input, InputLabel } from '@material-ui/core';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Wrap from '../HOC/Wrap';\r\nimport Tables from '../Elements/Tables';\r\n\r\nimport AuthService from \"../Services/Auth.service\";\r\nimport CustomerService from \"../Services/Customer.service\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 75,\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(3),\r\n        textAlign: 'left',\r\n        boxShadow: 'none',\r\n        display: 'flex',\r\n        // justifyContent: 'space-between',\r\n    },\r\n    accountNumber: {\r\n        minWidth: 200,\r\n        maxHeight: 30,\r\n        padding: 5,\r\n        border: '1px solid',\r\n        ' :hover': {\r\n            borderBottom: '0px',\r\n        }\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default function CASA() {\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    const [account, setAccount] = React.useState('');\r\n\r\n    const [Customer, setCustomer] = useState({});\r\n    const [ErrorMessage, setErrorMessage] = useState(\"Please Login first\");\r\n\r\n    const [Accounts, setAccounts] = useState([]);\r\n    const [selectedAccount, setSelectedAccount] = useState({});\r\n    const [listOfTransactions , setListOfTransactions] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const currentCustomer = AuthService.getCurrentUser();\r\n\r\n        if (currentCustomer)\r\n            CustomerService.getCustomerDetails().then(\r\n                (response) => {\r\n                    setCustomer(response.data);\r\n                    var accountList = response.data.accounts.map((val) => val.accountNumber);\r\n\r\n                    setAccounts(accountList);\r\n                },\r\n                (error) => {\r\n                    const _content =\r\n                        (error.response && error.response.data) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    setCustomer({});\r\n                    setErrorMessage(_content);\r\n                    console.log(_content);\r\n                }\r\n            );\r\n        else\r\n            setCustomer({});\r\n\r\n    }, []);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setAccount(event.target.value);\r\n    };\r\n\r\n    const handleAccountChange = (accountNumber) => {\r\n        CustomerService.getAccountDetails(accountNumber).then(response => {\r\n            console.log(response.data);\r\n            setSelectedAccount(response.data);\r\n            setListOfTransactions(response.data.transactions);\r\n        }, error => {\r\n\r\n            const _content =\r\n                (error.response && error.response.data) ||\r\n                error.message ||\r\n                error.toString();\r\n            setCustomer({});\r\n            setErrorMessage(_content);\r\n            console.log(_content);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <CssBaseline>\r\n            {/* This Card is for account summary.*/}\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardHeader\r\n                    title=\"Account Details\"\r\n                />\r\n                <CardContent>\r\n                    <Grid container spacing={1}>\r\n                        <Grid container item xs={12} spacing={1}>\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}><strong>Account Number : &emsp;&emsp;&emsp;</strong>\r\n                                    <FormControl variant=\"\">\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-outlined-label\"\r\n                                            id=\"demo-simple-select-outlined\"\r\n                                            value={account}\r\n                                            displayEmpty={true}\r\n                                            className={classes.accountNumber}\r\n                                            onChange={handleChange}\r\n                                            label=\"Account Number\"\r\n                                        >\r\n                                            {Accounts.map((accountNumber) => <MenuItem key={accountNumber} value={accountNumber} onClick={() => handleAccountChange(accountNumber)}>{accountNumber}</MenuItem>)}\r\n\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}><strong>Balance : &emsp;&emsp;&emsp;</strong>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        { selectedAccount.balance }\r\n                                    </Typography>\r\n                                </Paper>\r\n\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs={12} spacing={1}>\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}><strong>Account Type : &emsp;&emsp;&emsp;</strong>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        { selectedAccount.type}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Paper className={classes.paper}><big><strong>Segment : &emsp;&emsp;&emsp;</strong></big>\r\n                                    <Typography variant=\"body2\" gutterBottom>\r\n                                        {selectedAccount.segment}\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </CardContent>\r\n\r\n            </Card>\r\n\r\n            {/* {THIS IS FOR TABLE} */}\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardHeader\r\n                    title=\"Transaction Details\"\r\n                />\r\n                <CardContent>\r\n                    {/* <Tables data= {listOfTransactions} accountNumber={selectedAccount.accountNumber}/> */}\r\n\r\n\r\n                    {listOfTransactions.length>0 ? <Tables key={selectedAccount.accountNumber} data={listOfTransactions} accountNumber={selectedAccount.accountNumber} /> : <div>Please select an Account Number</div>}\r\n                </CardContent>\r\n\r\n            </Card>\r\n        </CssBaseline>\r\n\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n// This below imports are for Routing perpose\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nimport CASA from '../../Components/CASA';\r\n\r\nimport AuthService from \"../../Services/Auth.service\";\r\nimport CustomerService from \"../../Services/Customer.service\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('md')]: {\r\n            // width: `calc(100% - ${drawerWidth}px)`,\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            width: `100%`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        width: '100%',\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    MenuItem: {\r\n        fontSize: 14,\r\n    }\r\n}));\r\n\r\nvar AccordionStyle = withStyles({\r\n    root: {\r\n        margin: 0,\r\n        boxShadow: \"none\",\r\n        width: '100%',\r\n        '& ListItemText': {\r\n            color: '#ff0000',\r\n            fontSize: 10,\r\n        },\r\n    },\r\n\r\n})(Accordion);\r\n\r\nfunction Dashboard(props) {\r\n\r\n    const [Customer, setCustomer] = useState({});\r\n    const [ErrorMessage, setErrorMessage] = useState(\"Please Login first\");\r\n\r\n    function convertTZ(date, tzString) {\r\n        console.log(typeof date);\r\n        return new Date((typeof date === \"string\" ? new Date(date) : date).toLocaleString(\"en-US\", {timeZone: tzString}));   \r\n    }\r\n\r\n    useEffect(() => {\r\n        const currentCustomer = AuthService.getCurrentUser();\r\n\r\n        if (currentCustomer)\r\n            CustomerService.getCustomerDetails().then(\r\n                (response) => {\r\n                    setCustomer(response.data);\r\n                    console.log(response.data);\r\n                },\r\n                (error) => {\r\n                    const _content =\r\n                        (error.response && error.response.data) ||\r\n                        error.message ||\r\n                        error.toString();\r\n                    setCustomer({});\r\n                    setErrorMessage(\"Your session has expired please login again\");\r\n                    console.log(_content);\r\n                }\r\n            );\r\n        else\r\n            setCustomer({});\r\n\r\n    }, []);\r\n\r\n\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleLogOut = () => {\r\n        AuthService.logout();\r\n        handleClose();\r\n        props.history.push(\"/\")\r\n    }\r\n\r\n    const drawer = (\r\n        <div>\r\n            <div className={classes.toolbar} />\r\n            <Divider />\r\n            <List>\r\n                {['CASA', 'CREDIT CARD',].map((text, index) => (\r\n                    <ListItem button component={Link} to={`/${text}`} key={text}>\r\n\r\n                        <ListItemText primary={text} />\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem button key={'FUND TRANSFER'} style={{ padding: 0, }}>\r\n                    <AccordionStyle>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography >FUND TRANSFER</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <List>\r\n                                <ListItem button component={Link} to='/Add Beneficiary'>\r\n                                    <ListItemText primary={'Add Beneficiary'} />\r\n                                </ListItem>\r\n\r\n                                <ListItem button component={Link} to='/Edit Beneficiary'>\r\n                                    <ListItemText primary={'Edit Beneficiary'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Transfer within your accounts'>\r\n                                    <ListItemText primary={'Transfer within your accounts'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Transfer to within Bank Beneficiary'>\r\n                                    <ListItemText primary={'Transfer to within Bank Beneficiary'} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </AccordionDetails>\r\n                    </AccordionStyle>\r\n                </ListItem>\r\n                <ListItem button key={'BILL PAYMENT'} style={{ padding: 0, }}>\r\n                    <AccordionStyle>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography >BILL PAYMENT</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <List>\r\n                                <ListItem button component={Link} to='/Add Biller'>\r\n                                    <ListItemText primary={'Add Biller'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Edit Biller'>\r\n                                    <ListItemText primary={'Edit Biller'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Pay'>\r\n                                    <ListItemText primary={'Pay'} />\r\n                                </ListItem>\r\n                            </List>\r\n\r\n                        </AccordionDetails>\r\n                    </AccordionStyle>\r\n                </ListItem>\r\n                <ListItem button key={'SERVICE REQUEST'} style={{ padding: 0, }}>\r\n                    <AccordionStyle>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography >SERVICE REQUEST</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <List>\r\n                                <ListItem button component={Link} to='/Check(Cheque) Order'>\r\n                                    <ListItemText primary={'Check(Cheque) Order'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Credit Limit Increase'>\r\n                                    <ListItemText primary={'Credit Limit Increase'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Reset Password'>\r\n                                    <ListItemText primary={'Reset Password'} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </AccordionDetails>\r\n                    </AccordionStyle>\r\n                </ListItem>\r\n                <ListItem button key={'PRODUCT OPENING'} style={{ padding: 0, }}>\r\n                    <AccordionStyle>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography >PRODUCT OPENING</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <List>\r\n                                <ListItem button component={Link} to='/Edit Beneficiary'>\r\n                                    <ListItemText primary={'Open New Casa Account'} />\r\n                                </ListItem>\r\n                                <ListItem button component={Link} to='/Edit Beneficiary'>\r\n                                    <ListItemText primary={'Open New Credit Card'} />\r\n                                </ListItem>\r\n\r\n                            </List>\r\n                        </AccordionDetails>\r\n                    </AccordionStyle>\r\n                </ListItem>\r\n\r\n            </List>\r\n            <Divider />\r\n\r\n        </div>\r\n    );\r\n\r\n    const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Router>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            edge=\"start\"\r\n                            onClick={handleDrawerToggle}\r\n                            className={classes.menuButton}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                            Demo Bank\r\n                </Typography>\r\n                        <Button variant=\"contained\" color=\"primary\" disableElevation onClick={handleMenu}>\r\n                            Welcome {Customer.name ? Customer.name.split(\" \")[0] : \"\"}\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            TransitionComponent={Fade}\r\n                        >\r\n                            <MenuItem onClick={handleClose} className={classes.MenuItem}>\r\n                                <ListItemIcon>\r\n                                    <PersonIcon fontSize=\"small\" />\r\n                                </ListItemIcon>{Customer.name}</MenuItem>\r\n                            <MenuItem onClick={handleClose} className={classes.MenuItem}>\r\n                                <ListItemIcon>\r\n                                    <ScheduleIcon fontSize=\"small\" />\r\n                                </ListItemIcon>Last Login : {\r\n                                    Customer.previousLogin ? convertTZ(Customer.previousLogin, 'Asia/Kolkata').toLocaleString(): null\r\n\r\n\r\n                                } </MenuItem>\r\n                            <MenuItem onClick={handleLogOut} className={classes.MenuItem}>\r\n                                <ListItemIcon>\r\n                                    <ExitToAppIcon fontSize=\"small\" />\r\n                                </ListItemIcon>\r\n                             Logout</MenuItem>\r\n                        </Menu>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                    {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                    <Hidden smUp implementation=\"css\">\r\n                        <Drawer\r\n                            container={container}\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                            open={mobileOpen}\r\n                            onClose={handleDrawerToggle}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            ModalProps={{\r\n                                keepMounted: true, // Better open performance on mobile.\r\n                            }}\r\n                        >\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n                    <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open\r\n                        >\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n                </nav>\r\n\r\n                <main className={classes.content}>\r\n                    <div className={classes.toolbar} />\r\n                    {\r\n                        Customer.username ?\r\n                            (<Switch>\r\n                                <Route path='/CASA' component={CASA}></Route>\r\n\r\n                            </Switch>) :\r\n\r\n                            (<div>{ErrorMessage}</div>)\r\n                    }\r\n\r\n                </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n}\r\n\r\nDashboard.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useRef } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n// import Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport { ContactSupportOutlined, HistoryRounded, LaptopWindows } from '@material-ui/icons';\r\n\r\nimport AuthService from \"../../Services/Auth.service\";\r\nimport CustomerService from \"../../Services/Customer.service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  label: {\r\n    backgroundColor: \"#fafafa\"\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n// This is the main login funciton that is being exported\r\nexport default function Login(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const classes = useStyles();  // for styling\r\n\r\n\r\n  const [whereTo, changeWhereTo] = useState('');\r\n  const [user_name, changeusername] = useState(''); //The Username in the input\r\n  const [usernameError, setUsernameError] = useState({ error: false, errorText: \"\" });\r\n\r\n  const [pass_word, changepassword] = useState(''); // The password in the input\r\n  const [passwordError, setPasswordError] = useState({ error: false, errorText: \"\" });\r\n\r\n  const HISTORY = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);  // This is for loading when the login process is in place\r\n  const [message, setMessage] = useState(\"\"); // Message to be displayed\r\n  \r\n  const handleClick = () => {\r\n    setOpen(true);\r\n};\r\n\r\nconst handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n        return;\r\n    }\r\n\r\n    setOpen(false);\r\n};\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    if (user_name == \"\") {\r\n      setUsernameError({ error: true, errorText: \"Username should not be empty\" });\r\n    }\r\n    if (pass_word == \"\") {\r\n      setPasswordError({ error: true, errorText: \"Password should not be empty\" });\r\n    }\r\n\r\n    if (user_name != \"\" && pass_word != \"\")\r\n      AuthService.login(user_name, pass_word).then(\r\n        () => {\r\n          handleClick();\r\n          setTimeout(() => {\r\n            props.history.push(\"/CASA\");\r\n        }, 2000);\r\n          //window.location.reload(); //No need to reload the window\r\n        },\r\n        (error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          setLoading(false);\r\n          setMessage(resMessage);\r\n          setUsernameError({ error: false, errorText: \"\" });\r\n          setPasswordError({ error: true, errorText: resMessage })\r\n          console.log(resMessage);\r\n        }\r\n      );\r\n\r\n\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <AccountBalanceIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Login\r\n        </Typography>\r\n        <form className={classes.form} >\r\n          <TextField\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.label\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"UserName\"\r\n            name=\"UserName\"\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            onChange={(val) => { changeusername(val.target.value) }}\r\n            onKeyPress={() => { if (user_name != \"\") setUsernameError({ error: false, errorText: \"\" }) }}\r\n            error={usernameError.error}\r\n            helperText={usernameError.errorText}\r\n\r\n          />\r\n          <TextField\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.label\r\n              }\r\n            }}\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            onChange={(val) => { changepassword(val.target.value) }}\r\n            onKeyPress={() => { if (pass_word != \"\") setPasswordError({ error: false, errorText: \"\" }) }}\r\n            autoComplete=\"current-password\"\r\n            error={passwordError.error}\r\n            helperText={passwordError.errorText}\r\n          />\r\n           <Snackbar open={open} autoHideDuration={6000} onClose={handleLogin}>\r\n        <Alert onClose={handleLogin} severity=\"success\">\r\n          Login Successfully!\r\n                        </Alert>\r\n      </Snackbar>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            component={Link}\r\n            to={`/${whereTo}`}\r\n            className={classes.submit}\r\n            onClick={handleLogin}\r\n            disabled={loading}\r\n          >\r\n            Login\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link to=\"/ForgotPassword\" >\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link to=\"/SignUp\" >\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      \r\n      <Box mt={8}>\r\n        {/* <Copyright /> */}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function FormDialog(props) {\r\n\r\n  \r\n  console.log(props.error);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={props.handleClickOpen}>\r\n        Verify\r\n      </Button> */}\r\n      <Dialog open={props.open} onClose={props.handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Verify OTP</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            error={props.error.error}\r\n            helperText={props.error.errorText}\r\n            onChange={(e) => { props.setOtp(Number(e.target.value)) }}\r\n            label=\"Otp\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={() => {\r\n            props.verify();\r\n          }} color=\"primary\">\r\n            Verify\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link as RouteLink } from 'react-router-dom';\r\nimport FormDialog from '../../Elements/FormDialog';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport AuthService from \"../../Services/Auth.service\";\r\nimport CustomerService from \"../../Services/Customer.service\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    wrapper: {\r\n        margin: theme.spacing(1),\r\n        position: 'relative',\r\n    },\r\n    buttonProgress: {\r\n        color: green[500],\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        marginTop: -12,\r\n        marginLeft: -12,\r\n    },\r\n    label: {\r\n        backgroundColor: \"white\"\r\n    }\r\n}));\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function SignUp(props) {\r\n    const classes = useStyles();\r\n    const [dialogVariable, setdialogVariable] = React.useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [openSnack, setOpenSnack] = useState(false);\r\n\r\n    const [Otp, setOtp] = useState(0);\r\n\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [usernameError, setUsernameError] = useState({ error: false, errorText: \"\" });\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [passwordError, setPasswordError] = useState({ error: false, errorText: \"\" });\r\n\r\n    const [loading, setLoading] = useState(false);  // This is for loading when the login process is in place\r\n\r\n    const [otpError, setOtpError] = useState({ error: false, errorText: \"\" });\r\n\r\n    const handleClick = () => {\r\n        setOpenSnack(true);\r\n    };\r\n\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenSnack(false);\r\n    };\r\n    const verify = () => {\r\n\r\n        if (Otp < 1000000 && Otp > 100000) {\r\n\r\n\r\n            CustomerService.validateOTP(Otp).then((response) => {\r\n                if (response.data.split(\":\")[0] == \"True \") {\r\n                    handleClose();\r\n                    handleClick();\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/ResetPassword\");\r\n                    }, 2000);\r\n\r\n                }\r\n                else {\r\n                    setOtpError({ error: true, errorText: response.data });\r\n\r\n                }\r\n\r\n            },\r\n                (error) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    setLoading(false);\r\n                    setUsernameError({ error: false, errorText: \"\" });\r\n                    setPasswordError({ error: true, errorText: resMessage })\r\n                    console.log(resMessage);\r\n                });\r\n\r\n\r\n        }\r\n        else\r\n            setOtpError({ error: true, errorText: \"The Otp is not in the defined range\" })\r\n\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleSignUp = () => {\r\n\r\n        setLoading(true);\r\n\r\n        if (username == \"\") {\r\n            setUsernameError({ error: true, errorText: \"Username should not be empty\" }); return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError({ error: true, errorText: \"Password should not be empty\" }); return;\r\n        }\r\n\r\n        AuthService.signUp(username, password).then((response) => {\r\n            if (response.data.accessToken) {\r\n\r\n                localStorage.setItem(\"SignUpToken\", JSON.stringify(response.data));\r\n\r\n                const signUpCredentials = JSON.parse(localStorage.getItem('SignUpToken'));\r\n                console.log(signUpCredentials);\r\n\r\n\r\n                CustomerService.generateOTP().then(() => {\r\n                    handleClickOpen();\r\n                    setLoading(false);\r\n                });\r\n\r\n            }\r\n\r\n\r\n        }, (error) => {\r\n\r\n            const resMessage =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            setLoading(false);\r\n            console.log(resMessage);\r\n            setUsernameError({ error: false, errorText: \"\" });\r\n            setPasswordError({ error: true, errorText: resMessage })\r\n\r\n\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {dialogVariable}\r\n\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n        </Typography>\r\n                <div className={classes.form} noValidate>\r\n                    <Grid container spacing={2}>\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.label\r\n                                    }\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                error={usernameError.error}\r\n                                helperText={username.errorText}\r\n                                required\r\n                                fullWidth\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                                name=\"username\"\r\n                                autoComplete=\"username\"\r\n                                onKeyPress={() => { if (username != \"\") setUsernameError({ error: false, errorText: \"\" }) }}\r\n                                onChange={(e) => { setUsername(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.label\r\n                                    }\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                error={passwordError.error}\r\n                                helperText={passwordError.errorText}\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onKeyPress={() => { if (password != \"\") setPasswordError({ error: false, errorText: \"\" }) }}\r\n\r\n                                onChange={(e) => { setPassword(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div className={classes.wrapper}>\r\n                        <Snackbar open={openSnack} autoHideDuration={6000} onClose={handleSnackClose}>\r\n                            <Alert onClose={handleSnackClose} severity=\"success\">\r\n                                SignUp Successfully! Redirecting to Reset Password page...\r\n                        </Alert>\r\n                        </Snackbar>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            disabled={loading}\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={handleSignUp}\r\n                        >\r\n                            Sign Up\r\n                        </Button>\r\n                        {loading && <CircularProgress size={24} className={classes.buttonProgress} />}\r\n                    </div>\r\n\r\n\r\n                    <FormDialog open={open} handleClickOpen={handleClickOpen} handleClose={handleClose} verify={verify} error={otpError} setOtp={setOtp} />\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <RouteLink to=\"/\">\r\n                                Already have an account? Sign in\r\n                            </RouteLink>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n            <Box mt={5}>\r\n                {/* <Copyright /> */}\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport FormDialog from '../../Elements/FormDialog';\r\nimport { Link as RouteLink } from \"react-router-dom\";\r\nimport CustomerService from \"../../Services/Customer.service\";\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    label: {\r\n        backgroundColor: \"#fafafa\"\r\n    }\r\n}));\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nfunction ResetPassword(props) {\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    if (!JSON.parse(localStorage.getItem('SignUpToken'))) {\r\n        props.history.push('/SignUp');\r\n    }\r\n\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [usernameError, setUsernameError] = useState({ error: false, errorText: \"\" });\r\n\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordError, setPasswordError] = useState({ error: false, errorText: \"\" });\r\n\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [confirmPasswordError, setConfirmPasswordError] = useState({ error: false, errorText: \"\" });\r\n\r\n    const handleResetPassword = () => {\r\n\r\n        console.log(\"Inside handleResetPassword\" + username + password + confirmPassword);\r\n\r\n        if (username == \"\") {\r\n            setUsernameError({ error: true, errorText: \"Username should not be empty\" });\r\n            return;\r\n        }\r\n        if (password == \"\") {\r\n            setPasswordError({ error: true, errorText: \"Password should not be empty\" });\r\n            return;\r\n        }\r\n\r\n        if (confirmPassword == \"\") {\r\n            setConfirmPasswordError({ error: true, errorText: \"Confirm Password should not be empty\" });\r\n            return;\r\n        }\r\n\r\n        if (password != confirmPassword) {\r\n            setConfirmPasswordError({ error: true, errorText: \"Confirm password does not match with the given password\" });\r\n            return;\r\n        }\r\n\r\n\r\n        if (username != \"\" && password != \"\" && confirmPassword != \"\")\r\n            CustomerService.resetPassword(username, password).then((response) => {\r\n\r\n                if (response.data) {\r\n\r\n                    handleClick();\r\n                    setTimeout(() => {\r\n                        props.history.push(\"/\");\r\n                        localStorage.clear();\r\n                    }, 2000);\r\n\r\n                }\r\n            },\r\n                (error) => {\r\n                    const resMessage =\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                        error.message ||\r\n                        error.toString();\r\n\r\n                    setUsernameError({ error: true, errorText: resMessage });\r\n                    console.log(resMessage);\r\n                });\r\n\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Reset Password\r\n        </Typography>\r\n                <div className={classes.form} >\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.label\r\n                                    }\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                error={usernameError.error}\r\n                                helperText={usernameError.errorText}\r\n                                name=\"current-password\"\r\n                                label=\"Current Password\"\r\n                                type=\"current-password\"\r\n                                id=\"current-password\"\r\n                                autoComplete=\"current-password\"\r\n                                onKeyPress={() => { if (username != \"\") setUsernameError({ error: false, errorText: \"\" }) }}\r\n                                onChange={(e) => { setUsername(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.label\r\n                                    }\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                error={passwordError.error}\r\n                                helperText={passwordError.errorText}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                                onKeyPress={() => { if (password != \"\") setPasswordError({ error: false, errorText: \"\" }) }}\r\n                                onChange={(e) => { setPassword(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                InputLabelProps={{\r\n                                    classes: {\r\n                                        root: classes.label\r\n                                    }\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                error={confirmPasswordError.error}\r\n                                helperText={confirmPasswordError.errorText}\r\n                                name=\"confirm-password\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"confirm-password\"\r\n                                id=\"confirm-password\"\r\n                                autoComplete=\"current-password\"\r\n                                onKeyPress={() => { if (confirmPassword != \"\") setConfirmPasswordError({ error: false, errorText: \"\" }) }}\r\n                                onChange={(e) => { setConfirmPassword(e.target.value) }}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                        <Alert onClose={handleClose} severity=\"success\">\r\n                            Password reset successfuly! Redirecting...\r\n                        </Alert>\r\n                    </Snackbar>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleResetPassword}\r\n                    >\r\n                        Change Password\r\n          </Button>\r\n                </div>\r\n            </div>\r\n            <Box mt={5}>\r\n                {/* <Copyright /> */}\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\n\r\nexport default ResetPassword;","import './App.css';\r\n\r\nimport './Dashboard/Dashboard';\r\nimport Login from './Login Signup/Login';\r\nimport SignUp from './Login Signup/SignUp';\r\nimport Dashboard from './Dashboard/Dashboard';\r\nimport ResetPassword from '../Containers/Login Signup/ResetPassword';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/' exact component={Login} />\r\n          <Route path='/SignUp' component={SignUp} />\r\n          <Route path='/ResetPassword' component={ResetPassword} />\r\n          <Route path='/CASA' component={Dashboard} />\r\n\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}